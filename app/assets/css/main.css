/* =========================
   CUBE CSS
   Layers: settings, reset, base, composition, utilities, blocks, exceptions
   ========================= */

@layer settings, reset, base, composition, utilities, blocks, exceptions;

@import "open-props/style";
/* -------------------------
   SETTINGS (tokens, fonts)
   ------------------------- */
@layer settings {
  @font-face {
    font-family: "Verdana";
    src: url("../fonts/Verdana.ttf");
    font-weight: 400;
  }

  @font-face {
    font-family: "Verdana";
    src: url("../fonts/Verdana Bold.ttf");
    font-weight: 600;
  }

  :root {
    interpolate-size: allow-keywords;

    --font-family-sans:
      "Verdana", "Sofia Pro", "Hiragino Maru Gothic ProN", Quicksand, Comfortaa,
      Manjari, "Arial Rounded MT", "Arial Rounded MT Bold", Calibri,
      source-sans-pro, sans-serif;

    /* Brand hues */
    --primary-hue: 195;
    --primary-saturation: 94%;
    --primary-lightness: 25%;

    --primary-light-400: hsl(
      var(--primary-hue) var(--primary-saturation)
        calc(var(--primary-lightness) + 10%)
    );
    --primary-light-500: hsl(
      var(--primary-hue) var(--primary-saturation) var(--primary-lightness)
    );
    --primary-light-600: hsl(
      var(--primary-hue) var(--primary-saturation)
        calc(var(--primary-lightness) - 8%)
    );

    --secondary-hue: 0;
    --secondary-saturation: 0%;
    --secondary-lightness: 30%;
    --secondary-light: hsl(
      var(--secondary-hue) var(--secondary-saturation)
        var(--secondary-lightness)
    );

    --accent-hue: 34;
    --accent-saturation: 89%;
    --accent-lightness: 40%;

    --accent--light-400: hsl(
      var(--accent-hue) var(--accent-saturation)
        calc(var(--accent-lightness) + 10%)
    );
    --accent-light-500: hsl(
      var(--accent-hue) var(--accent-saturation) var(--accent-lightness)
    );
    --accent-light-600: hsl(
      var(--accent-hue) var(--accent-saturation)
        calc(var(--accent-lightness) - 8%)
    );

    /* neutral */
    --neutral-50: #f6f6f6;
    --neutral-100: #e7e7e7;
    --neutral-200: #d1d1d1;
    --neutral-300: #b0b0b0;
    --neutral-400: #888888;
    --neutral-500: #6d6d6d;
    --neutral-600: #5d5d5d;
    --neutral-700: #4c4c4c;
    --neutral-800: #454545;
    --neutral-900: #3d3d3d;
    --neutral-950: #262626;

    --text-1-light: hsla(0, 0%, 10%, 1);
    --text-2-light: hsla(0, 0%, 50%, 1);

    --background-1-light: var(--neutral-50);
    --background-2-light: #fff;

    /* Alias tokens for theme */
    --primary-400: var(--primary-light-400);
    --primary-500: var(--primary-light-500);
    --primary-600: var(--primary-light-600);

    --secondary: var(--secondary-light);

    --accent-400: var(--accent-light-400);
    --accent-500: var(--accent-light-500);
    --accent-600: var(--accent-light-600);

    --text-1: var(--text-1-light);
    --text-2: var(--text-2-light);

    --surface-1: var(--background-1-light);
    --surface-2: var(--background-2-light);

    --radius-lg: 20px;
    --radius-md: 16px;
    --radius-sm: 12px;

    /* Custom spacing scale (kept for compatibility) */
    --space-unit: 1em;
    --space-xxxs: calc(0.25 * var(--space-unit));
    --space-xxs: calc(0.375 * var(--space-unit));
    --space-xs: calc(0.5 * var(--space-unit));
    --space-sm: calc(0.75 * var(--space-unit));
    --space-md: calc(1.25 * var(--space-unit));
    --space-lg: calc(2 * var(--space-unit));
    --space-xl: calc(3.25 * var(--space-unit));
    --space-xxl: calc(5.25 * var(--space-unit));
    --space-xxxl: calc(8.5 * var(--space-unit));
  }
}

.light {
}
.dark {
}

/* -------------------------
   RESET (element resets)
   ------------------------- */
@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  * {
    margin: 0;
    padding: 0;
    font: inherit;
  }

  html {
    hanging-punctuation: first last;
  }
  body {
    min-height: 100svh;
  }

  img,
  picture,
  svg,
  video {
    display: block;
    max-width: 100%;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    text-wrap: balance;
  }

  p,
  li {
    max-width: var(--p-max-width, 65ch);
    text-wrap: pretty;
  }
}

/* -------------------------
   BASE (site-wide element styles)
   ------------------------- */
@layer base {
  html {
    overflow-x: hidden;
  }
  body {
    font-family: var(--font-family-sans);
    background: var(--surface-1);
    color: var(--text-2);
    overflow-x: hidden;
    font-weight: normal;
  }
}

/* -------------------------
   COMPOSITION (layout patterns)
   ------------------------- */
@layer composition {
  /* Page container */
  .l-container {
    display: grid;
    gap: var(--size-7);
    max-width: 80rem;
    margin-inline: auto;
    container-type: inline-size;
    padding: 1rem;

    @media (min-width: 768px) {
      padding: 2rem;
    }
  }

  /* Simple grid helper for 1->2 cols at container widths */
  .l-grid-1-2 {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    container-type: inline-size;

    @media (min-width: 600px) {
      grid-template-columns: 1fr 1fr;
    }
  }

  /* One/Three layout */
  .l-one-three {
    display: grid;
    grid-template-columns: 1fr;
    container-type: inline-size;
    gap: 1rem;
  }
  @container (min-width: 600px) {
    .l-one-three {
      grid-template-columns: 1fr 1fr;
    }
  }
  @container (min-width: 800px) {
    .l-one-three {
      gap: var(--size-7);
      grid-template-columns: 30cqi auto;
    }
  }
}

/* -------------------------
   UTILITIES (single-purpose helpers)
   ------------------------- */
@layer utilities {
  /* Buttons */
  .u-btn {
    background-color: transparent;
    border: none;
    font-style: normal;
    width: fit-content;
    transition:
      background-color 200ms var(--ease-spring-1),
      outline 200ms var(--ease-spring-1);
  }
  .u-btn:where(:hover, :focus, :active) {
    outline-style: solid;
    outline-width: 0.2em;
    outline-offset: 0.3em;
  }
  .u-btn--lg {
    padding: var(--size-px-3) var(--size-px-4);
    font-size: 0.8rem;
    border-radius: var(--radius-round);
  }
  .u-btn--md {
    padding: var(--size-px-2) var(--size-px-3);
    font-size: 0.8rem;
    border-radius: var(--radius-round);
  }
  .u-btn--sm {
    padding: var(--size-px-1) var(--size-px-2);
    font-size: 0.8rem;
    border-radius: var(--radius-round);
  }

  .u-btn--primary {
    color: white;
    background-color: var(--primary-500);
  }
  .u-btn--primary:where(:hover, :focus) {
    background-color: var(--primary-600);
    outline-color: var(--primary-600);
  }

  .u-btn--accent {
    color: white;
    background-color: var(--accent-500);
  }
  .u-btn--accent:where(:hover, :focus) {
    background-color: var(--accent-400);
    outline-color: var(--accent-400);
  }

  /* Typography utilities */
  .u-header {
    font-size: clamp(2rem, 5vw, 2.5rem);
    text-transform: uppercase;
    font-weight: 400;
    padding-bottom: var(--size-3);
  }
  .u-header span:first-of-type {
    color: var(--primary-500);
  }
  .u-header span {
    color: var(--accent-500);
  }

  .u-text {
    max-width: 75ch;
    line-height: 140%;
    font-weight: 100;
    color: #8a8a8a;
    font-size: clamp(0.875rem, 10vw, 1rem);
  }

  /* Surfaces */
  .u-surface-1 {
    background: var(--surface-1);
  }
  .u-surface-2 {
    background: var(--surface-2);
  }

  /* Radii & card */
  .u-card {
    border-radius: var(--radius-lg);
    padding: var(--size-5);
  }

  /* Media fit */
  .u-img {
    max-width: 100%;
    width: 100%;
    height: 100%;
  }
}

/* -------------------------
   BLOCKS (components)
   ------------------------- */
@layer blocks {
  /* Header */
  .header {
    width: 100%;
    max-width: 72rem;
    margin-inline: auto;
    padding: var(--size-1);
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }
  .header__icon {
    font-size: 4rem;
    fill: var(--primary-500);
  }
  .header__actions {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 1rem;

    @media (min-width: 500px) {
      flex-direction: row;
    }
  }

  /* Home hero */
  .homehero {
    display: grid;
    position: relative;
    grid-template-columns: 1fr;
    gap: var(--size-3);
    container-type: inline-size;
    margin-bottom: var(--size-8);
    color: var(--text-1);

    @media (min-width: 768px) {
      gap: var(--size-7);
    }
  }

  .homehero__img {
    grid-row: 1 / span 2;
    grid-column: 1;
    z-index: -10;
    opacity: 0.1;
    height: 25cqh;
    justify-self: end;
    margin-right: -25%;

    @media (min-width: 400px) {
      margin-right: -10%;
    }

    @media (min-width: 768px) {
      justify-self: center;
      margin-right: 30%;
      height: 15rem;
      margin-top: -10%;
      grid-row: 2;
    }
  }

  .homehero__main {
    max-width: 75ch;
    grid-column: 1;
    grid-row: 1;
  }
  .homehero__content {
    grid-row: 2;
    grid-column: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: var(--size-3);
    color: #6d6d6d;
    font-style: italic;

    @media (min-width: 768px) {
      grid-row: 2;
      grid-column: 1 / -1;
      gap: 2rem;
      align-self: flex-end;
      margin-left: 50%;
    }
  }
  .homehero__content p {
    font-size: 0.875rem;
    max-width: 28rem;

    @media (min-width: 768px) {
      font-size: 1.25rem;
      max-width: 32rem;
    }
  }

  /* About section */
  .about {
    overflow: hidden;
    display: grid;
    position: relative;
    grid-template-columns: 1fr;
    background-color: var(--surface-2);
    gap: var(--size-3);
    align-items: center;
    border-radius: var(--radius-lg);
    padding: var(--size-6);

    @container (min-width: 700px) {
      grid-template-columns: 1fr 2fr;
    }
  }
  .about__content {
    padding: var(--size-2);
    max-width: 60ch;
    z-index: 1;
    display: grid;
    gap: var(--size-6);
  }
  .about__img {
    border-radius: var(--radius-sm);
    overflow: hidden;
    aspect-ratio: 4/2.5;
    z-index: 1;
    height: 100%;
    width: 100%;

    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }

    @container (min-width: 700px) {
      aspect-ratio: unset;
    }
  }
  .about__decoration {
    position: absolute;
    top: 54%;
    right: -60px;
    width: 300px;
    height: 600px;
    z-index: 0;

    @container (min-width: 700px) {
      top: -140px;
      right: -60px;
      width: 300px;
      height: 600px;
    }
  }

  /* FAQ */
  .Faq {
    display: grid;
    grid-template-columns: 1fr;
    background-color: var(--surface-2);
    gap: var(--size-2);
  }
  @container (min-width: 600px) {
    .Faq {
      gap: var(--size-3);
      grid-template-columns: 1fr 1fr;
    }
  }
}

/* -------------------------
   EXCEPTIONS (one-off tweaks)
   ------------------------- */
@layer exceptions {
  /* If you need legacy class compatibility */
  main.l-container {
  } /* maps old <main> styles to .l-container */

  /* Back-compat aliases (optional) */
  .card {
    composes: u-card;
  }
  .base-text {
    composes: u-text;
  }
  .header {
    composes: u-header;
  }

  /* If composes is unsupported in your tooling, mirror with duplicate classes: */
  .card {
    border-radius: var(--radius-lg);
    padding: var(--size-5);
  }
  .base-text {
    max-width: 75ch;
    line-height: 140%;
    font-weight: 100;
    color: #8a8a8a;
    font-size: clamp(0.875rem, 10vw, 1rem);
  }
  .header {
    font-size: clamp(2rem, 5vw, 2.5rem);
    text-transform: uppercase;
    font-weight: 400;
    padding-bottom: var(--size-3);
  }
  .header span:first-of-type {
    color: var(--primary-500);
  }
  .header span {
    color: var(--accent-500);
  }
}
